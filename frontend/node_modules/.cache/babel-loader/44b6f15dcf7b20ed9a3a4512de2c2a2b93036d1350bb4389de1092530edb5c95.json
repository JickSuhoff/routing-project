{"ast":null,"code":"var _jsxFileName = \"/Users/sergejsuhov/Desktop/routing-project2.0/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return { isError: true, message: 'Could not fetch events.' }\n    //throw new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500, });\n    return json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: loadEvents(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return redirect('/events');\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvent","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["/Users/sergejsuhov/Desktop/routing-project2.0/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\n\n\nfunction EventDetailPage() {\n\n    const { event, events } = useRouteLoaderData('event-detail');\n    return (\n        <>\n            <Await resolve={event}>\n\n            </Await>\n            <Await resolve={events}>\n                {(loadedEvent) => <EventItem event={loadedEvent} />}\n            </Await>\n        </>\n    )\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n    if (!response.ok) {\n        throw json({ message: 'Could not fetch details for selected event.' }, { status: 500 });\n    } else {\n        const resData = await response.json();\n        return resData.event;\n    }\n}\n\nasync function loadEvents() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        //return { isError: true, message: 'Could not fetch events.' }\n        //throw new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500, });\n        return json({ message: 'Could not fetch events' }, { status: 500 });\n    } else {\n        const resData = await response.json();\n        return resData.events;\n    }\n}\n\n\nexport async function loader({ request, params }) {\n    const id = params.eventId;\n    return defer({\n        event: loadEvents(id),\n        events: loadEvents(),\n    });\n}\n\nexport async function action({ params, request }) {\n    const eventId = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + eventId, {\n        method: request.method,\n    })\n\n    if (!response.ok) {\n        throw json({ message: 'Could not delete event.' }, { status: 500 });\n    } else {\n        return redirect('/events');\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}