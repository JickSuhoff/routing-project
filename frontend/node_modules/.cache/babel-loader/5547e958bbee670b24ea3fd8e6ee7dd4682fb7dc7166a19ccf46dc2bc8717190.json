{"ast":null,"code":"var _jsxFileName = \"/Users/sergejsuhov/Desktop/routing-project2.0/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { json, useLoaderData } from 'react-router';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n\n  // if (data.isError) {\n  //     return <p>{data.message}</p>\n  // }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return { isError: true, message: 'Could not fetch events.' }\n    //throw new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500, });\n    return json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function loader() {}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["json","useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/Users/sergejsuhov/Desktop/routing-project2.0/frontend/src/pages/Events.js"],"sourcesContent":["import { json, useLoaderData } from 'react-router';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n\n    const data = useLoaderData();\n\n    // if (data.isError) {\n    //     return <p>{data.message}</p>\n    // }\n    const events = data.events;\n\n    return (\n        <>\n            <EventsList events={events} />\n        </>\n    );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        //return { isError: true, message: 'Could not fetch events.' }\n        //throw new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500, });\n        return json({ message: 'Could not fetch events' }, { status: 500 });\n    } else {\n        return response;\n    }\n}\n\nexport async function loader() {\n\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,aAAa,QAAQ,cAAc;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAElB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;;EAE5B;EACA;EACA;EACA,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEX;AAACP,EAAA,CAdQD,UAAU;EAAA,QAEFN,aAAa;AAAA;AAAAe,EAAA,GAFrBT,UAAU;AAgBnB,eAAeA,UAAU;AAEzB,eAAeU,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA,OAAOpB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACvE,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAEA,OAAO,eAAeK,MAAMA,CAAA,EAAG,CAE/B;AAAC,IAAAP,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}