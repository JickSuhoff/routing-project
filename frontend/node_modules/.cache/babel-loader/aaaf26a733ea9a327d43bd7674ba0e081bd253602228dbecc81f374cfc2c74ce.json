{"ast":null,"code":"var _jsxFileName = \"/Users/sergejsuhov/Desktop/routing-project2.0/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from \"react\";\nimport { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  console.log(1, events);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => {\n          console.log(2, loadedEvents);\n          return /*#__PURE__*/_jsxDEV(EventsList, {\n            event: loadedEvents\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 32\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return { isError: true, message: 'Could not fetch events.' }\n    //throw new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500, });\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: await loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Suspense","useRouteLoaderData","json","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","console","log","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["/Users/sergejsuhov/Desktop/routing-project2.0/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Suspense } from \"react\";\nimport { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\n\n\nfunction EventDetailPage() {\n\n    const { event, events } = useRouteLoaderData('event-detail');\n    console.log(1, events)\n\n    return (\n        <>\n            <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading ...</p>}>\n                <Await resolve={event}>\n                    {(loadedEvent) => <EventItem event={loadedEvent} />}\n                </Await>\n            </Suspense>\n            <Suspense fallback={<p style={{ textAlign: 'center' }}>Loading ...</p>}>\n                <Await resolve={events}>\n                    {(loadedEvents) => {\n                        console.log(2, loadedEvents)\n                        return <EventsList event={loadedEvents} />\n                    }}\n                </Await>\n            </Suspense>\n        </>\n    )\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n    const response = await fetch('http://localhost:8080/events/' + id);\n\n    if (!response.ok) {\n        throw json({ message: 'Could not fetch details for selected event.' }, { status: 500 });\n    } else {\n        const resData = await response.json();\n        return resData.event;\n    }\n}\n\nasync function loadEvents() {\n    const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n        //return { isError: true, message: 'Could not fetch events.' }\n        //throw new Response(JSON.stringify({ message: 'Could not fetch events' }), { status: 500, });\n        throw json({ message: 'Could not fetch events' }, { status: 500 });\n    } else {\n        const resData = await response.json();\n        return resData.events;\n    }\n}\n\n\nexport async function loader({ request, params }) {\n    const id = params.eventId;\n    return defer({\n        event: await loadEvent(id),\n        events: loadEvents(),\n    });\n}\n\nexport async function action({ params, request }) {\n    const eventId = params.eventId;\n    const response = await fetch('http://localhost:8080/events/' + eventId, {\n        method: request.method,\n    })\n\n    if (!response.ok) {\n        throw json({ message: 'Could not delete event.' }, { status: 500 });\n    }\n    return redirect('/events');\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}