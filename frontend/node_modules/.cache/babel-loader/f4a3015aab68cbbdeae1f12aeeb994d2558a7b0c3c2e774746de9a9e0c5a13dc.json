{"ast":null,"code":"var _jsxFileName = \"/Users/sergejsuhov/Desktop/routing-project2.0/frontend/src/components/EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, useNavigate, useNavigation, useActionData, json, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(_ref) {\n  _s();\n  let {\n    method,\n    event\n  } = _ref;\n  const data = useActionData();\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === 'submitting';\n  function cancelHandler() {\n    navigate('..');\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\"\n        // required\n        ,\n        defaultValue: event ? event.title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\"\n        // required\n        ,\n        defaultValue: event ? event.image : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\"\n        // required\n        ,\n        defaultValue: event ? event.date : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\"\n        // required\n        ,\n        defaultValue: event ? event.description : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        disabled: isSubmitting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Submitting...' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(EventForm, \"4RpZWvb1/vq18jUIhqcDrPiPElE=\", false, function () {\n  return [useActionData, useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  // const method = request.method;\n  // const data = await request.formData();\n\n  // const eventData = {\n  //     title: data.get('title'),\n  //     image: data.get('image'),\n  //     date: data.get('date'),\n  //     description: data.get('description'),\n  // }\n\n  // let url = 'http://localhost:8080/events';\n  // if (method === 'PATCH') {\n  //     const eventId = params.eventId;\n  //     url = 'http://localhost:8080/events/' + eventId;\n  // }\n\n  // const response = fetch(url, {\n  //     method: method,\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify(eventData)\n  // });\n\n  // if (response.status === 422) {\n  //     return response;\n  // }\n\n  // if (!response.ok) {\n  //     throw json({ message: 'Could not save event.' }, { status: 500 })\n  // }\n\n  console.log(1);\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","useNavigate","useNavigation","useActionData","json","redirect","classes","jsxDEV","_jsxDEV","EventForm","_ref","_s","method","event","data","navigate","navigation","isSubmitting","state","cancelHandler","className","form","children","errors","Object","values","map","err","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","defaultValue","title","image","date","rows","description","actions","onClick","disabled","_c","action","_ref2","request","params","console","log","$RefreshReg$"],"sources":["/Users/sergejsuhov/Desktop/routing-project2.0/frontend/src/components/EventForm.js"],"sourcesContent":["import { Form, useNavigate, useNavigation, useActionData, json, redirect } from 'react-router-dom';\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n\n    const data = useActionData();\n    const navigate = useNavigate();\n    const navigation = useNavigation();\n\n    const isSubmitting = navigation.state === 'submitting';\n\n\n    function cancelHandler() {\n        navigate('..');\n    }\n\n    return (\n        <Form\n            method={method} className={classes.form}>\n            {data && data.errors && (\n                <ul>\n                    {Object.values(data.errors).map((err) => (\n                        <li key={err}>\n                            {err}\n                        </li>\n                    ))}\n                </ul>\n            )}\n            <p>\n                <label htmlFor=\"title\">Title</label>\n                <input\n                    id=\"title\"\n                    type=\"text\"\n                    name=\"title\"\n                    // required\n                    defaultValue={event ? event.title : ''}\n                />\n            </p>\n            <p>\n                <label htmlFor=\"image\">Image</label>\n                <input\n                    id=\"image\"\n                    type=\"url\"\n                    name=\"image\"\n                    // required\n                    defaultValue={event ? event.image : ''}\n                />\n            </p>\n            <p>\n                <label htmlFor=\"date\">Date</label>\n                <input\n                    id=\"date\"\n                    type=\"date\"\n                    name=\"date\"\n                    // required\n                    defaultValue={event ? event.date : ''}\n                />\n            </p>\n            <p>\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    rows=\"5\"\n                    // required\n                    defaultValue={event ? event.description : ''}\n                />\n            </p>\n            <div className={classes.actions}>\n                <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n                    Cancel\n                </button>\n                <button disabled={isSubmitting}>{isSubmitting ? 'Submitting...' : 'Save'}</button>\n            </div>\n        </Form>\n    );\n}\n\nexport default EventForm;\n\n\nexport async function action({ request, params }) {\n    // const method = request.method;\n    // const data = await request.formData();\n\n    // const eventData = {\n    //     title: data.get('title'),\n    //     image: data.get('image'),\n    //     date: data.get('date'),\n    //     description: data.get('description'),\n    // }\n\n    // let url = 'http://localhost:8080/events';\n    // if (method === 'PATCH') {\n    //     const eventId = params.eventId;\n    //     url = 'http://localhost:8080/events/' + eventId;\n    // }\n\n    // const response = fetch(url, {\n    //     method: method,\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify(eventData)\n    // });\n\n    // if (response.status === 422) {\n    //     return response;\n    // }\n\n    // if (!response.ok) {\n    //     throw json({ message: 'Could not save event.' }, { status: 500 })\n    // }\n\n    console.log(1)\n    return redirect('/events');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}